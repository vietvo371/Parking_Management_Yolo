#!/bin/bash

set -e

# Th∆∞ m·ª•c t·∫°m
TEMP_DIR=temp_merge
REPO_MAIN_PATH=$(pwd)

# Danh s√°ch repo ph·ª•
REPO_URLS=(
  # "git@github.com:vietvo371/MovieStreaming_Fe.git"
  # "git@github.com:vietvo371/MovieStreaming_Be.git"
  "git@github.com:vietvo371/MovieStreaming-Moblie.git"
)

# T√™n th∆∞ m·ª•c t∆∞∆°ng ·ª©ng
FOLDERS=(
  # "DATN_FE"
  # "DATN_BE"
  "DATN_MOBILE"
)

# T·∫°o th∆∞ m·ª•c t·∫°m v√† x·ª≠ l√Ω t·ª´ng repo
mkdir -p "$TEMP_DIR"
cd "$TEMP_DIR" || exit 1

for i in "${!REPO_URLS[@]}"; do
  repo_url="${REPO_URLS[$i]}"
  folder="${FOLDERS[$i]}"

  echo "‚û°Ô∏è  Cloning $repo_url v√†o th∆∞ m·ª•c $folder ..."
  git clone "$repo_url" "$folder" || { echo "‚ùå Clone th·∫•t b·∫°i"; exit 1; }
  cd "$folder" || exit 1

  echo "üì¶  Di chuy·ªÉn to√†n b·ªô l·ªãch s·ª≠ v√†o th∆∞ m·ª•c $folder ..."
  git filter-repo --to-subdirectory-filter "$folder"

  echo "üîó  Tr·ªü l·∫°i repo ch√≠nh ƒë·ªÉ merge..."
  cd "$REPO_MAIN_PATH" || exit 1
  git remote add "${folder}_remote" "$REPO_MAIN_PATH/$TEMP_DIR/$folder"
  git fetch "${folder}_remote"

  echo "üîÄ  Merge $folder v√†o nh√°nh hi·ªán t·∫°i..."
  git merge --allow-unrelated-histories "${folder}_remote/master" -m "Merge $folder v√†o monorepo"

  echo "üßπ  Xo√° remote t·∫°m ${folder}_remote ..."
  git remote remove "${folder}_remote"

  cd "$TEMP_DIR" || exit 1
done

# D·ªçn d·∫πp
cd "$REPO_MAIN_PATH" || exit 1
rm -rf "$TEMP_DIR"

echo "‚úÖ Ho√†n t·∫•t merge t·∫•t c·∫£ repo v√†o GIT_DATN"
